/*! M3rdPartyFingerprintBasic android plugin 2.1.0.6 [Android 2.1.0.6] */

(function( window, undefined ) {

    'use strict';
    
    var pluginVersion = "2.1.0.6";
        
    /**
     * 3rdparty 기본 OS의 기능을 이용하는 지문인식 관련 기능을 제공한다.
     * @class M.plugin('3rd_fingerprint_basic')
     */
    M.plugin("3rd_fingerprint_basic", {
    
    
        /**
         * 지문을 인증한다.
         * @memberof M.plugin('3rd_fingerprint_basic')
         * @param {object} setting 설정 정보
         * @since 2.0.0
         * @return {M}
         */
    
        /* 
        M.plugin('3rd_fingerprint_basic').auth({
            'dialog' : true,
            'progress': function( status, result ){
                M.pop.instance(result);
            },
             callback:function(status, result){
                    console.log(result);
            }
         });
         */
        'auth': function( _setting ) {
            var defaultSetting, setting, result, context = window, nativeOptions = {};
            
            defaultSetting = M.defaultSetting.create({
                defaultSetting: {
                    'dialog' : true,
                    'progress': function( status, result ){
    
                    },
                    'callback': function( status, result ) {
                    }
                },
                surrogateKeys: {
    
                },
                enumsKeys: {
                    
                }
            });
    
            setting  = defaultSetting.convert( _setting );
            setting.progressResponse = M.response.on(function( result ) {
    
                var resultRe, resultSt;
    
                resultSt = result.status;
                resultRe = JSON.parse(result.result);
                
    
                setting.progress.call( context, resultSt, resultRe, setting );
            });
    
            setting.progressResponse.progressing = true;
    
            setting.response = M.response.on(function( result ) {
                var resultRe, resultSt;
    
                if ( result.status == "FAIL" ) {
                    resultSt = result.status;
                    resultRe = result.message;
                }
                else {
                    resultSt = result.status;
                    try {
                        resultRe = JSON.parse(result.result);
                    } catch(e) {
                        resultRe = result.result;
                    }
                }
                setting.progressResponse.expire();
                setting.callback.call( context, resultSt, resultRe, setting );
            });
    
            nativeOptions.dialog = setting.dialog == true ? 'Y' : 'N';
            nativeOptions.progress = setting.progressResponse.toString();
            nativeOptions.callback = setting.response.toString();
            
            result = M.execute('3rd.fingerprint.basic.wn2Auth', nativeOptions);
    
            if ( result.status !== 'PROCESSING' ) {
                setting.response.execute( result );
            }
    
            return result;
        },
    
    
        /**
         * 지문인식이 가능한 기기인지 체크한다.
         * @memberof M.plugin('3rd_fingerprint_basic')
         * @param {object} setting 설정 정보
         * @since 2.0.0
         * @return {M}
         */
         /* 
        M.plugin('3rd_fingerprint_basic').check({
             callback:function(status, result){
                    console.log(result);
            }
         });
         */
        'check': function( _setting ) {
            var defaultSetting, setting, result, context = window, nativeOptions = {};
            
            if(_setting === undefined){
                result = M.execute("3rd.fingerprint.basic.wn2Check");
                return result;
            }
    
            defaultSetting = M.defaultSetting.create({
                defaultSetting: {
                    'callback': function( status, result ) {
                                }
                },
                surrogateKeys: {
    
                },
                enumsKeys: {
                    
                }
            });
    
            result = M.execute("3rd.fingerprint.basic.wn2Check");
    
            setting  = defaultSetting.convert( _setting );
    
            if ( typeof setting.callback === 'function' ) {
                var resultRe, resultSt;
                if(typeof(result.result) == 'string'){
                    result.result = JSON.parse(result.result);
                }
                            
                resultSt = result.status;
                resultRe = result.result;
    
                setting.callback.call( context, resultSt, resultRe, setting );
                return M;
            }
    
            return result;
        },
    
    
        /**
         * 지문 등록 화면으로 이동한다.
         * @memberof M.plugin('3rd_fingerprint_basic')
         * @param {object} setting 설정 정보
         * @since 2.0.0
         * @return {M}
         */
         /* 
        M.plugin('3rd_fingerprint_basic').moveSetting();
         */
        'moveSetting': function( _setting ) {
            var defaultSetting, setting, result, context = window, nativeOptions = {};
    
            result = M.execute('3rd.fingerprint.basic.wn2MoveSetting');
            
            return result;
        }
    }, pluginVersion);
    
    })(window);
    
    