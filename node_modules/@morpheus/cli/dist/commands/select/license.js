"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@oclif/core");
const errors_1 = require("../../errors");
const config_1 = require("../../lib/config");
const network_1 = require("../../lib/utils/network");
const license_1 = require("../../lib/license");
class SelectLicense extends core_1.Command {
    async run() {
        // const {
        // args: { templateName },
        // } = await this.parse(SelectLicense)
        try {
            const cliConfig = await (0, config_1.loadCliConfig)();
            await (0, network_1.checkInternetConnectivity)(cliConfig);
            this.logJson(await (0, license_1.loadUserLicenses)(cliConfig));
        }
        catch (err) {
            if (err instanceof errors_1.NetworkException) {
                this.warn(`인터넷 상태 또는 방화벽을 확인해주세요.`);
            }
            this.error(err);
        }
    }
}
exports.default = SelectLicense;
SelectLicense.description = '라이센스 목록 조회(offline)';
SelectLicense.hidden = true;
SelectLicense.examples = ['<%= config.bin %> <%= command.id %>'];
SelectLicense.flags = {
// flag with a value (-n, --name=VALUE)
// name: Flags.string({ char: 'n', description: 'name to print' }),
// flag with no value (-f, --force)
// force: Flags.boolean({ char: 'f' }),
};
SelectLicense.args = {
// templateName: Args.string({ description: '템플릿 상세조회' }),
};
