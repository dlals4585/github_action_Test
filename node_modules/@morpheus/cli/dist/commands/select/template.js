"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@oclif/core");
const errors_1 = require("../../errors");
const config_1 = require("../../lib/config");
const network_1 = require("../../lib/utils/network");
const project_1 = require("../../lib/project");
class SelectTemplate extends core_1.Command {
    async run() {
        // const {} = await this.parse(SelectTemplate)
        try {
            const cliConfig = await (0, config_1.loadCliConfig)();
            await (0, network_1.checkInternetConnectivity)(cliConfig);
            this.logJson(await (0, project_1.fetchTemplates)(cliConfig));
        }
        catch (e) {
            if (e instanceof errors_1.NetworkException) {
                this.warn(`인터넷 상태 또는 방화벽을 확인해주세요.`);
            }
            this.error(e);
        }
    }
}
exports.default = SelectTemplate;
SelectTemplate.description = '라이브러리 목록 조회(online)';
SelectTemplate.hidden = true;
SelectTemplate.examples = ['<%= config.bin %> <%= command.id %>'];
SelectTemplate.flags = {
// flag with a value (-n, --name=VALUE)
// provider: Flags.string({ char: 'p', description: 'template provider support [npm,gitea]' }),
// flag with no value (-f, --force)
// force: Flags.boolean({ char: 'f' }),
};
SelectTemplate.args = {
// templateName: Args.string({ description: '템플릿 상세조회' }),
};
