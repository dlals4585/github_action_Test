"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@oclif/core");
const errors_1 = require("../../errors");
const config_1 = require("../../lib/config");
const network_1 = require("../../lib/utils/network");
const npm_1 = require("../../lib/npm");
const definition_1 = require("../../definition");
class SelectCliversion extends core_1.Command {
    async run() {
        try {
            const cliConfig = await (0, config_1.loadCliConfig)();
            await (0, network_1.checkInternetConnectivity)(cliConfig);
            const data = await (0, npm_1.searchNpmPackage)(definition_1.PACKAGE_GROUP_NAME + '/cli', cliConfig);
            this.log(data['dist-tags'].latest);
        }
        catch (err) {
            if (err instanceof errors_1.NetworkException) {
                this.warn(`인터넷 상태 또는 방화벽을 확인해주세요.`);
            }
            this.error(err);
        }
    }
}
exports.default = SelectCliversion;
SelectCliversion.description = 'CLI 최신버전 조회';
SelectCliversion.hidden = true;
SelectCliversion.examples = ['<%= config.bin %> <%= command.id %>'];
SelectCliversion.flags = {};
SelectCliversion.args = {};
