"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@oclif/core");
const errors_1 = require("../../errors");
const config_1 = require("../../lib/config");
const network_1 = require("../../lib/utils/network");
const library_1 = require("../../lib/library");
class SelectLibrary extends core_1.Command {
    async run() {
        // const {
        // args: { libraryName },
        // } = await this.parse(SelectLibrary)
        try {
            const cliConfig = await (0, config_1.loadCliConfig)();
            await (0, network_1.checkInternetConnectivity)(cliConfig);
            this.logJson(await (0, library_1.loadLibraries)(cliConfig));
        }
        catch (err) {
            if (err instanceof errors_1.NetworkException) {
                this.warn(`인터넷 상태 또는 방화벽을 확인해주세요.`);
            }
            this.error(err);
        }
    }
}
exports.default = SelectLibrary;
SelectLibrary.description = '라이브러리 목록 조회(online)';
SelectLibrary.hidden = true;
SelectLibrary.examples = ['<%= config.bin %> <%= command.id %>'];
SelectLibrary.flags = {
// flag with a value (-n, --name=VALUE)
// name: Flags.string({ char: 'n', description: 'name to print' }),
// flag with no value (-f, --force)
// force: Flags.boolean({ char: 'f' }),
};
SelectLibrary.args = {
// libraryName: Args.string({ description: '라이브러리 상세 조회' }),
};
