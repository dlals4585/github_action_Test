"use strict";
// /* eslint-disable camelcase */
// import * as path from 'node:path'
// import Debug from 'debug'
// import { Config } from './config'
// import { writeXML } from './utils/xml'
// import { writeFile } from './utils/fs'
// import { SDKPrefLibraryRow, SDKPrefLibraryType } from './definitions'
// const debug = Debug('cli:lib:app.config')
// export interface AppManifest {
//   $: { useDirectView: 'false' }
//   log: ['y' | 'n']
//   lang: [string]
//   resource: [
//     {
//       base_version: [string]
//       target: ['app' | 'doc']
//       update: [
//         {
//           server: [string]
//           trcode: [string]
//           mode: [string]
//         }
//       ]
//     }
//   ]
//   startpage: [
//     {
//       name: [string]
//       orient: [string]
//       'orient-tablet': [string]
//     }
//   ]
//   settings: [string]
//   default_action: [
//     {
//       orient: [string]
//       'orient-tablet': [string]
//       animate: [string]
//       indicator: ['y' | 'n']
//     }
//   ]
//   library: [
//     {
//       ext: [string /* 'mcore.edu.android31.implementation.ExtendWNInterface' */]
//       addons: [
//         {
//           path: string[]
//           // 'm.client.library.addon.db.WNInterfaceDB',
//           // 'm.client.library.addon.file.WNInterfaceFile',
//           // 'm.client.library.addon.media.WNInterfaceMedia',
//           // 'm.client.library.addon.net.WNInterfaceNet',
//           // 'm.client.library.addon.netext.WNInterfaceNetExt',
//           // 'm.client.library.addon.popup.WNInterfacePopup',
//           // 'm.client.library.addon.zip.WNInterfaceZip',
//         }
//       ]
//       plugins: [
//         {
//           path: string[]
//         }
//       ]
//     }
//   ]
//   network: [
//     {
//       http: any[]
//       socket: any[]
//     }
//   ]
//   application: [
//     {
//       android: [
//         {
//           hardwareaccelerated: ['y' | 'n']
//           'user-theme': ['y' | 'n']
//           'use-youtube': ['y' | 'n']
//         }
//       ]
//     }
//   ]
// }
// interface AppManifestXml {
//   manifest: AppManifest
// }
// const INIT_BASE_MANIFEST = (): AppManifestXml => ({
//   manifest: {
//     $: { useDirectView: 'false' },
//     log: ['y'],
//     lang: ['ko'],
//     resource: [
//       {
//         base_version: ['000000'],
//         target: ['app'],
//         update: [
//           {
//             server: [''],
//             trcode: [''],
//             mode: [''],
//           },
//         ],
//       },
//     ],
//     startpage: [
//       {
//         name: ['www/html/index.html'],
//         orient: ['default'],
//         'orient-tablet': ['default'],
//       },
//     ],
//     settings: [''],
//     default_action: [
//       {
//         orient: ['default'],
//         'orient-tablet': ['default'],
//         animate: ['default'],
//         indicator: ['n'],
//       },
//     ],
//     library: [
//       {
//         ext: [
//           '',
//           /* 'mcore.edu.android31.implementation.ExtendWNInterface' */
//         ],
//         addons: [
//           {
//             path: [
//               '',
//               // 'm.client.library.addon.db.WNInterfaceDB',
//               // 'm.client.library.addon.file.WNInterfaceFile',
//               // 'm.client.library.addon.media.WNInterfaceMedia',
//               // 'm.client.library.addon.net.WNInterfaceNet',
//               // 'm.client.library.addon.netext.WNInterfaceNetExt',
//               // 'm.client.library.addon.popup.WNInterfacePopup',
//               // 'm.client.library.addon.zip.WNInterfaceZip',
//             ],
//           },
//         ],
//         plugins: [
//           {
//             path: [],
//           },
//         ],
//       },
//     ],
//     network: [
//       {
//         http: [''],
//         socket: [''],
//       },
//     ],
//     application: [
//       {
//         android: [
//           {
//             hardwareaccelerated: ['n'],
//             'user-theme': ['n'],
//             'use-youtube': ['n'],
//           },
//         ],
//       },
//     ],
//   },
// })
// const MANIFEST_XML_NAME = 'Manifest.xml' as const
// export async function writeManifestXml(config: Config): Promise<void> {
//   debug('write Manifest.xml start')
//   const xml: AppManifestXml = { manifest: config.app.manifest }
//   const destDir = path.join(config.app.rootDir, 'assets', 'res')
//   await writeFile(path.join(destDir, MANIFEST_XML_NAME), '<?xml version="1.0" encoding="utf-8"?>' + (await writeXML(xml)))
//   debug('write Manifest.xml')
// }
// export function initManifestXml(): AppManifest {
//   return INIT_BASE_MANIFEST().manifest
// }
// export function syncManifestFromLibrarys(
//   config: Config,
//   libraries: SDKPrefLibraryRow[]
// ): {
//   plugins: [{ path: string[] }]
//   addons: [{ path: string[] }]
//   ext: [string]
// } {
//   debug('sync Manifest.xml from config Librarys Info \n %o', libraries)
//   const manifest = initManifestXml()
//   manifest.library[0].ext[0] = `${config.app.appId}.implementation.ExtendWNInterface`
//   manifest.library[0].addons[0].path = libraries
//     .map((item) => (item.interfaces && item.$.type === SDKPrefLibraryType.ADDON ? item.interfaces[0].interface[0] : ''))
//     .filter(Boolean)
//   manifest.library[0].plugins[0].path = libraries
//     .map((item) =>
//       item.interfaces && [SDKPrefLibraryType.PLUGIN, SDKPrefLibraryType.THIRD_ANDROID, SDKPrefLibraryType.THIRD_IOS].includes(item.$.type)
//         ? item.interfaces[0].interface[0]
//         : ''
//     )
//     .filter(Boolean)
//   debug('create Manifest.xml library object \n %o', manifest.library[0])
//   return manifest.library[0]
// }
