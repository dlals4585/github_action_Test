/// <reference types="node" />
import { SuperAgentRequest } from '../../definition';
export interface CreateRequestOptions {
    userAgent: string;
    disabledTLSCerts?: boolean;
}
export type HttpMethod = 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE' | 'PURGE' | 'HEAD' | 'OPTIONS';
export declare enum ContentType {
    JSON = "application/json",
    FORM_URLENCODED = "application/x-www-form-urlencoded",
    HTML = "text/html"
}
export declare function createRequest(method: HttpMethod, url: string, { userAgent, disabledTLSCerts }: CreateRequestOptions): Promise<{
    req: SuperAgentRequest;
}>;
/**
 * Initiate a request, downloading the contents to a writable stream.
 *
 * @param req The request to download to the writable stream.
 * @param ws Must be a dedicated writable stream that calls the 'close' event.
 * @return Promise<void>
 */
export declare function download(req: SuperAgentRequest, ws: NodeJS.WritableStream, { progress }: {
    progress?: (loaded: number, total: number) => void;
}): Promise<void>;
