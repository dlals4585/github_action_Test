"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.unzip = void 0;
const path = require("node:path");
const yauzl = require("yauzl");
const fs_1 = require("./fs");
function unzip(zip, dir, rootFolder) {
    return new Promise((resolve, reject) => {
        yauzl.open(zip, { lazyEntries: true }, function (err, zipfile) {
            if (err)
                return reject(err);
            zipfile.readEntry();
            zipfile.on('entry', function (entry) {
                if (/\/$/.test(entry.fileName)) {
                    // Directory file names end with '/'.
                    // Note that entires for directories themselves are optional.
                    // An entry's fileName implicitly requires its parent directories to exist.
                    zipfile.readEntry();
                }
                else {
                    // file entry
                    zipfile.openReadStream(entry, function (err, readStream) {
                        if (err)
                            return reject(err);
                        readStream.on('end', function () {
                            zipfile.readEntry();
                        });
                        // window도 unzip시 경로는 /로 구분한다.
                        const names = entry.fileName.split('/');
                        names[0] = rootFolder; // 루트폴더명 변경
                        const filename = names.pop();
                        const dirpath = path.join(dir, ...names);
                        if (!(0, fs_1.pathExistsSync)(dirpath))
                            (0, fs_1.mkdirpSync)(dirpath);
                        const file = (0, fs_1.createWriteStream)(path.join(dir, ...names, filename));
                        readStream.pipe(file);
                    });
                }
            });
            zipfile.on('end', () => {
                resolve();
            });
            zipfile.on('error', (err) => {
                zipfile.close();
                reject(err);
            });
        });
    });
}
exports.unzip = unzip;
