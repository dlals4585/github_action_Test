"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.promifyStream = exports.isExecutableFile = exports.pathExecutable = exports.pathAccessible = exports.copy = exports.copySync = void 0;
const tslib_1 = require("tslib");
const fs = require("fs-extra");
tslib_1.__exportStar(require("fs-extra"), exports);
function copySync(srcDir, destDir, overwrite = true) {
    fs.copySync(srcDir, destDir, { overwrite });
}
exports.copySync = copySync;
function copy(srcDir, destDir, overwrite = true) {
    return fs.copy(srcDir, destDir, { overwrite });
}
exports.copy = copy;
async function pathAccessible(filePath, mode) {
    try {
        await fs.access(filePath, mode);
    }
    catch {
        return false;
    }
    return true;
}
exports.pathAccessible = pathAccessible;
async function pathExecutable(filePath) {
    return pathAccessible(filePath, fs.constants.X_OK);
}
exports.pathExecutable = pathExecutable;
async function isExecutableFile(filePath) {
    const [stats, executable] = await Promise.all([fs.stat(filePath), pathExecutable(filePath)]);
    return Boolean(stats) && (stats.isFile() || stats.isSymbolicLink()) && executable;
}
exports.isExecutableFile = isExecutableFile;
function promifyStream(ws, rs) {
    return new Promise((resolve) => {
        rs.on('data', (chunk) => {
            ws.write(chunk);
        });
        rs.on('end', () => {
            resolve();
        });
    });
}
exports.promifyStream = promifyStream;
