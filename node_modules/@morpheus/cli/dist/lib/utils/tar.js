"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.downloadAndUnzip = void 0;
const path = require("node:path");
const zlib = require("node:zlib");
const tar = require("tar-stream");
const fs = require("./fs");
function downloadAndUnzip(req, dir, { progress }) {
    return new Promise((resolve, reject) => {
        req
            .on('response', (res) => {
            if (res.status !== 200) {
                reject(new Error(`Encountered bad status code (${res.status}) for ${req.url}\n` +
                    `This could mean the server is experiencing difficulties right now--please try again later.`));
            }
            if (progress) {
                let loaded = 0;
                const total = Number(res.header['content-length']);
                res.on('data', (chunk) => {
                    loaded += chunk.length;
                    progress(loaded, total);
                });
            }
        })
            .on('error', (err) => {
            if (err.code === 'ECONNABORTED') {
                reject(new Error(`Timeout of ${err.timeout}ms reached for ${req.url}`));
            }
            else {
                reject(err);
            }
        });
        const extract = tar.extract();
        // fs.removeSync(dir)
        extract.on('entry', function (header, stream, next) {
            // header is the tar header
            // stream is the content body (might be an empty stream)
            // call next when you are done with this entry
            // window도 unzip시 경로는 /로 구분한다.
            const names = header.name.split('/');
            // eslint-disable-next-line @typescript-eslint/no-unused-vars
            const rootFolder = names.shift(); // 루트 폴더 제거
            const p = path.join(dir, ...names);
            // eslint-disable-next-line @typescript-eslint/no-unused-vars
            const filename = names.pop(); // file name일수도 아닐수도.
            const dirname = path.join(dir, ...names);
            // const opts = { mode: header.mode } // permission error..
            switch (header.type) {
                case 'directory':
                    fs.mkdirpSync(p);
                    next();
                    break;
                case 'file':
                    if (names.length === 0 && filename === 'package.json') {
                        next();
                        break;
                    }
                    // 폴더가 존재하지 않는 경우
                    if (!fs.pathExistsSync(dirname)) {
                        fs.mkdirpSync(dirname);
                    }
                    stream.pipe(fs.createWriteStream(p));
                    break;
                case 'symlink':
                    // ignore symlinks since they will not work on windows
                    next();
                    break;
                default:
                    throw new Error(`unknwon file type ${header.type}`);
            }
            stream.on('end', function () {
                next(); // ready for next entry
            });
            stream.resume(); // just auto drain the stream
        });
        extract.on('finish', resolve);
        req.pipe(zlib.createGunzip()).pipe(extract);
    });
}
exports.downloadAndUnzip = downloadAndUnzip;
